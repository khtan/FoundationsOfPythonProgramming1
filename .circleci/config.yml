# reusable steps
test_dotnet: &test_dotnet
    steps:
      - checkout
      - run:
          name : Install project dependencies
          working_directory: csharp
          command: dotnet restore
      - run:
          name : Run CSharp unit tests
          working_directory: csharp
          # XunitTests/csharp-results, JUnitTests/csharp-results, JUnitTestProject1/csharp-results
          command:
            dotnet test -v n --logger "junit;LogFilePath=csharp-results/csharp-unit-test.xml"
      - store_test_results:
           path : csharp
# -----------
# config file
# -----------
version: 2.1
orbs:
   win: circleci/windows@2.2.0
jobs:
  test_linux_typescript:
    build:
      working_directory: typescript/my-app
      docker:
        - image: circleci/node:10-browsers
      steps:
        - checkout
        - restore_cache:
            key: my-app-{{ .Branch }}-{{ checksum "package-lock.json" }}
        - run: npm install
        - save-cache:
            key: my-app-{{ .Branch }}-{{ checksum "package-lock.json" }}
            paths:
              - "node_modules"
        - run: npm run test -- --no-watch --no-progress --browsers=ChromeHeadlessCI
        - run: npm run e2e -- --protractor-config=e2e/protractor.conf.js
  test_linux_java:
    docker:
      - image: circleci/openjdk:jdk-stretch # cimg not yet available
    steps: # mvn is in /opt/apache-maven/bin/mvn, current version 3.6.0
      - checkout
      - run:
          name: Install Java dependencies
          working_directory: java
          command: mvn dependency:go-offline
      - run:
          name: Run Junit tests
          working_directory: java
          command: mvn test
      - store_test_results:
          path : java/target/surefire-reports
  test_linux_python:
    docker:
      - image: cimg/python:3.8
    steps:
      - checkout
      - run:
          name: Install Pytest
          command: pip install --user pytest pytest-mock requests
      - run:
          name: Check Pytest
          command: ./manage.py test
      - run:
          name: Run Python unit tests
          working_directory: python
          command: |
            mkdir pytest-results
            pytest tests --junitxml=pytest-results/junit.xml
      - store_test_results:
           path : python/pytest-results
      - store_artifacts:
           path : python/pytest-results
  test_linux_dotnet:
    docker:
      - image: mcr.microsoft.com/dotnet/core/sdk
    <<: *test_dotnet
  test_windows_dotnet:
    executor:
        name: win/default
        shell: bash.exe
    <<: *test_dotnet
workflows: # run jobs sequentially
  version: 2.1
  test_all_platforms:
     jobs:
       - test_linux_typescript
       - test_linux_java
         requires:
           - test-linux-typescript
       - test_linux_dotnet:
            requires:
              - test_linux_java
       - test_windows_dotnet:
            requires:
              - test_linux_dotnet
       - test_linux_python:
           requires:
             - test_windows_dotnet

